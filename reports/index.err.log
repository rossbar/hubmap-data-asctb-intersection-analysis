Traceback (most recent call last):
  File "/home/ross/.envs/base/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/ross/.envs/base/lib/python3.11/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ross/.envs/base/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/ross/.envs/base/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/ross/.envs/base/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/ross/.envs/base/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Create graph from tabular data
# NOTE: only focusing on primary protein markers here
G = nx.DiGraph()
for m in all_markers:
    celltypes = data["CT/1"][data["BProtein/1"] == m].dropna()
    G.add_node(m, layer=1)
    for ct in celltypes:
        G.add_node(ct, layer=0)
        G.add_edge(ct, m)

# Another manual mapping of non-standard marker names from the data to those
# in the ASCT+B tables
data_to_asct_marker_mapping = {
    "AE1": "None",
    "AQP1": "AQP1",
    "CALBINDIN": "CALB1",
    "CD31":"CD31",
    "COLIV": 'COL4A1',
    "NAKATPASE": 'ATP1A1',
    "PCAD": 'CDH1',
    "S6": "None",
    "SMA": "SMA",  # Is this SMA different than the report SMA?
    "VIMENTIN": "VIM"
}

markers_in_asctb = all_markers & set(data_to_asct_marker_mapping.values())
all_ancestors = set(
    itertools.chain.from_iterable(nx.ancestors(G, source=m) for m in markers_in_asctb)
)
all_nodes = all_ancestors | markers_in_asctb

# Visualize subgraph comprising the data marker panel intersection with the
# ASCT+B master table markers
H = G.subgraph(all_nodes)
pos = nx.multipartite_layout(G, subset_key="layer")
fig = plt.figure(figsize=(16, 12));
nx.draw_networkx_edges(H, pos=pos, min_source_margin=100, min_target_margin=50);
nx.draw_networkx_labels(H, pos=pos);
fig.tight_layout()
ax.set_xlim(ax.get_xlim() - np.array([100, 0]))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[15], line 40[0m
[1;32m     38[0m nx[38;5;241m.[39mdraw_networkx_labels(H, pos[38;5;241m=[39mpos);
[1;32m     39[0m fig[38;5;241m.[39mtight_layout()
[0;32m---> 40[0m [43max[49m[38;5;241m.[39mset_xlim(ax[38;5;241m.[39mget_xlim() [38;5;241m-[39m np[38;5;241m.[39marray([[38;5;241m100[39m, [38;5;241m0[39m]))

[0;31mNameError[0m: name 'ax' is not defined

